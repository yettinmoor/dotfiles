#!/usr/bin/env sh

# shellcheck disable=SC2016
usage() {
    echo 'qdl [-vps] <url>'
    echo 'download manager.'
    echo 'options:'
    echo ' -v       | use yt-dlp instead of curl.'
    echo ' -a       | use yt-dlp (audio) instead of curl.'
    echo ' -s       | invoke `store` on downloaded file.'
    echo ' -t <dir> | store to `dir`.'
    exit "$1"
}

while getopts vast:h o; do
    case "$o" in
        v) YTDL=1 ;;
        a) YTDL_AUDIO=1 ;;
        s) STORE=1 ;;
        t) dir=$OPTARG ;;
        h) usage 0 ;;
        *) usage 1 ;;
    esac
done

shift $((OPTIND - 1))

url="$1"
[ -z "$url" ] && usage 1

file="$(basename "$url")"

set -e

[ -z "$dir" ] && dir=$(dirpick)
[ -z "$dir" ] && exit

cd "$dir"

# dunst id
id="$(awk "BEGIN { srand($(date +%N)); print int(65535 * rand()); }")"

if [ -n "$YTDL" ]; then
    dunstify -r "$id" qdl "downloading $url (ytdl)"
    file="$(yt-dlp --get-filename "$url")"
    yt-dlp "$url"
elif [ -n "$YTDL_AUDIO" ]; then
    dunstify -r "$id" qdl "downloading $url (ytdl)"
    file="$(yt-dlp --get-filename "$url")"
    yt-dlp -x -f "bestaudio[ext=mp3]/best" "$url"
else
    dunstify -r "$id" qdl "downloading $url"
    curl --user-agent 'Chrome' -LO "$url"
fi

file="${file%%\?*}"

if [ -n "$STORE" ]; then
    file=$(store -t . -p "$file")
fi

# display notification
case "$(file --mime-type "$file" -bL)" in
    image/*)
        dunstify -r "$id" qdl \
            "$(realpath "$file" | sed "s:^$HOME:~:")" \
            -i "$(realpath "$file")"
        ;;
    video/*)
        tmp="$(mktemp)"
        ffmpegthumbnailer -i "$file" -o "$tmp" -s 300
        dunstify -r "$id" qdl \
            "$(realpath "$file" | sed "s:^$HOME:~:")" \
            -i "$tmp"
        rm "$tmp"
        ;;
    *)
        dunstify -r "$id" qdl "$(realpath "$file" | sed "s:^$HOME:~:")"
        ;;
esac
