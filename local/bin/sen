#!/usr/bin/env sh

L='\['
R='\]'

lang="$(basename "$1")"

case "$lang" in
    ja)
        L='「'
        R='」'
        translateword() {
            jisho -n 1 "$1" | {
                read -r head
                read -r defn
                printf "%s: %s" \
                    "$(echo "$head" | rg -o '^[^\]]+]')" \
                    "$(echo "$defn" | sed 's/^1\. \+//; s/ \+\[.*//')"
            }
        }
        ;;
    zh)
        L='「'
        R='」'
        translateword() {
            printf "%s[%s]: %s" \
                "$1" \
                "$(pypinyin "$1" | tr -d ' ')" \
                "$(wd "$1" | awk 'NR==3 {print}' | sed 's/[a-z]\+\. //')"
        }
        ;;
    fr | de | ru | el | tr)
        translateword() {
            printf "%s: %s" "$1" "$(trans -b "${lang}:" "$1" 2> /dev/null)"
        }
        ;;
    la)
        translateword() {
            printf "%s: %s" \
                "$(words "$1" | rg -o '^([^ ,]+).*\[X' -m 1 -r '$1' | tr -d ',')" \
                "$(words "$1" | rg -o '^([^;]+);' -m 1 -r '$1' | tr -d ';')"
        }
        ;;
    *) exit 1 ;;
esac

nl -b a | while read -r i line; do
    if { echo "$line" | grep -q "$L.\+$R"; } && ! { echo "$line" | grep -q '|'; }; then
        echo "$line" \
            | rg -o "$L([^$R]*)$R" -r '$1' \
            | nl \
            | while read -r j word; do
                trans="$(echo "$word" | cut -d ':' -f 2)"
                display="$(echo "$word" | cut -d ':' -f 1)"
                printf '%s %s | %s\n' \
                    "${i}.${j}" \
                    "$(translateword "$trans")" \
                    "$(echo "$line" | perl -pe "s/:[^$L]*(?=$R)//g; s/$L(?!${display}$R)//g; s/(?<!$L${display})$R//g;")" \
                    &
            done &
    else
        echo "$i $line"
    fi
done | sort -n | cut -d ' ' -f2-

wait
