#!/usr/bin/env sh
# All-in-one file compiler.

while getopts f: o; do
    case "$o" in
        f) ft="$OPTARG" ;;
        *) exit 1 ;;
    esac
done

shift $((OPTIND - 1))

file="$(readlink -f "$1")"
dir="$(dirname "$file")"
noext="${file%.*}"

[ -n "$file" ] && {
    cmd="$(head -n 1 "$file" | rg -o 'compile: (.+)' -r '$1')"
    [ -n "$cmd" ] && {
        if echo "$cmd" | grep -q '{}'; then
            sh -c "$(echo "$cmd" | sed "s:{}:$file:g")"
        else
            $cmd "$file"
        fi
        exit
    }
}

[ -f .compile ] && {
    sh .compile
    exit
}

[ -f Makefile ] && {
    make
    exit
}

[ -z "$file" ] && exit 1

case "$ft" in
    # shell
    sh) sh "$file" ;;

    # programming
    c)    cc "$file" -o "$noext" ;;
    cpp)  g++ "$file" -o "$noext" ;;
    cs)   mcs "$file" ;;
    go)   go run "$file" ;;
    hs)   runhaskell "$file" ;;
    js)   node "$file" ;;
    nim)  nimble build -r ;;
    pl)   perl "$file" ;;
    rkt)  racket "$file" ;;
    rust) cargo run ;;
    scm)  chicken-csi -q "$file" ;;
    ts)   deno run --allow-read "$file" ;;
    zig)  zig build run ;;

    # documents
    tex)  xelatex --output-directory="$dir" "$noext" ;;
    md)   pandoc "$file" --pdf-engine=xelatex --template=template -o "$noext".pdf ;;
    sent) setsid sent "$file" & ;;

    # custom formats
    mnemo) mnemo -i "$file" ;;

    # shebang
    *) $ft "$file" ;;
esac
