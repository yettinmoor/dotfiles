#!/usr/bin/env sh
# All-in-one file compiler.

if [ "$1" = --run ]; then
    run=true
    shift
else
    run=false
fi

file="$(readlink -f -- "$1")"
dir="$(dirname "$file")"
ext="${file#*.}"
noext="${file%.*}"

# process `--run`
if $run; then
    echo "$file"
    case "$ext" in
    c | cpp | nim) "$noext" ;;
    hs) ghci "$file" ;;
    html) setsid browser "$file" & ;;
    py) python -qi "$file" ;;
    qalc) qalc -i -t -f "$file" ;;
    sent) setsid sent "$file" >/dev/null 2>&1 & ;;
    tex | pandoc) zathura "$noext".pdf ;;
    md) case "$file" in
        */wiki/*.md)
            echo "$noext" |
                sed 's:wiki:wiki/html:' |
                xargs -r -I {} setsid "$BROWSER" --target window "{}.html"
            ;;
        esac ;;
    esac
    exit
fi

# `compile: <cmd>` in the first line
[ -f "$file" ] && {
    cmd="$(head -n 1 "$file" | rg -o 'compile: (.+)' -r '$1')"
    [ -n "$cmd" ] && {
        if echo "$cmd" | grep -q '{}'; then
            sh -c "$(echo "$cmd" | sed "s:{}:$file:g")"
        else
            $cmd "$file"
        fi
        exit
    }
}

# try a bunch of different files
[ -f .compile ] && {
    sh .compile "$@"
    exit
}
[ -x mk ] && {
    ./mk "$@"
    exit
}
[ -x make.sh ] && {
    ./make.sh "$@"
    exit
}
[ -x build.sh ] && {
    ./build.sh "$@"
    exit
}
[ -f build.zig ] && {
    zig build
    exit
}
[ -f Makefile ] && {
    make "$@"
    exit
}

[ -z "$file" ] && {
    echo 'nothing to do'
    exit 1
}

case "$ext" in
# shell
sh) sh "$file" ;;

# programming
c) cc "$file" -o "$noext" -g ;;
cpp) g++ "$file" -o "$noext" ;;
cs) mcs "$file" ;;
go) go run "$file" ;;
hs) runhaskell "$file" ;;
jl) julia "$file" ;;
js) node "$file" ;;
lua) lua "$file" ;;
odin) odin run "$file" -file ;;
pl) perl "$file" ;;
py) python "$file" ;;
rkt) racket "$file" ;;
rs) cargo run ;;
scm) chicken-csi -q "$file" ;;
ts) deno run --allow-read "$file" ;;
qalc) qalc -t -f "$file" ;;
zig) zig run "$file" ;;

# documents
tex) xelatex --output-directory="$dir" "$noext" ;;
md) pandoc "$file" --pdf-engine=xelatex -o "$noext".pdf ;;
sent) setsid sent "$file" & ;;

# custom formats
mnemo) mnemo -i "$file" ;;

# shebang
*)
    if [ -x "$file" ]; then
        "$file"
    else
        echo "compile doesn't know what to do with '$1', sorry."
        exit 1
    fi
    ;;
esac
